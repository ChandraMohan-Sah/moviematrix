# Generated by Django 5.2.3 on 2025-07-15 07:44

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('app1_media_manger', '0001_initial'),
        ('app2_gener_platform', '0001_initial'),
        ('app3_cast', '0001_initial'),
        ('app4_creator', '0001_initial'),
        ('app5_writer', '0001_initial'),
        ('app8_lang_prod_company', '__first__'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('movie_created', models.DateTimeField(auto_now_add=True)),
                ('movie_updated', models.DateTimeField(auto_now=True)),
                ('movie_cast', models.ManyToManyField(related_name='movie_cast', to='app3_cast.cast')),
                ('movie_creator', models.ManyToManyField(related_name='movie_creator', to='app4_creator.creator')),
                ('movie_genre', models.ManyToManyField(related_name='movie_genre', to='app2_gener_platform.genre')),
                ('movie_writer', models.ManyToManyField(related_name='movie_writer', to='app5_writer.writer')),
                ('moviemedia', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='app6_movie', to='app1_media_manger.moviemedia')),
                ('platform', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='movie_released_platform', to='app2_gener_platform.platform')),
            ],
        ),
        migrations.CreateModel(
            name='MovieBoxOffice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('budget', models.BigIntegerField(help_text='Budget in USD (e.g., 150000000)')),
                ('gross_country', models.BigIntegerField(help_text='Total gross in country of origin (USD)')),
                ('opening_weekend', models.BigIntegerField(help_text='Opening weekend earnings (USD)')),
                ('gross_worldwide', models.BigIntegerField(help_text='Total worldwide gross (USD)')),
                ('movie', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='movie_box_office', to='app6_movie.movie')),
            ],
        ),
        migrations.CreateModel(
            name='MovieCoreDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('release_date', models.DateField()),
                ('country_of_origin', models.CharField(max_length=100)),
                ('also_known_as', models.CharField(blank=True, max_length=255)),
                ('filming_location', models.CharField(blank=True, max_length=255)),
                ('language', models.ManyToManyField(related_name='movie_language', to='app8_lang_prod_company.language')),
                ('movie', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='movie_core_detail', to='app6_movie.movie')),
                ('production_companies', models.ManyToManyField(related_name='movie_prod_company', to='app8_lang_prod_company.productioncompany')),
            ],
        ),
        migrations.CreateModel(
            name='MovieGeneralDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField()),
                ('is_original', models.BooleanField()),
                ('duration', models.PositiveIntegerField(help_text='Duration in minutes')),
                ('avg_rating', models.FloatField(default=0)),
                ('number_rating', models.IntegerField(default=0)),
                ('storyline', models.TextField()),
                ('movie', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='movie_general_detail', to='app6_movie.movie')),
            ],
        ),
        migrations.CreateModel(
            name='MovieRatingReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('review', models.CharField(blank=True, max_length=200)),
                ('active', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='movie_reviews', to='app6_movie.movie')),
                ('user_movie_review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_movie_review', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MovieTechSpecs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('runtime', models.PositiveIntegerField(help_text='Runtime in minutes')),
                ('color', models.CharField(choices=[('color', 'Color'), ('bw', 'Black and White')], default='color', max_length=20)),
                ('sound_mix', models.CharField(choices=[('mono', 'Mono'), ('stereo', 'Stereo'), ('dolby_digital', 'Dolby Digital'), ('dts', 'DTS'), ('dolby_atmos', 'Dolby Atmos'), ('sdds', 'SDDS'), ('auro_3d', 'Auro 3D'), ('imax_6_track', 'IMAX 6-Track')], default='dolby_atmos', max_length=30)),
                ('movie', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='movie_tech_specs', to='app6_movie.movie')),
            ],
        ),
        migrations.CreateModel(
            name='MovieVotes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vote_type', models.CharField(choices=[('like', 'Like'), ('dislike', 'Dislike'), ('love', 'Love'), ('appreciate', 'Appreciate'), ('insightful', 'Insightful'), ('funny', 'Funny'), ('excited', 'Excited')], max_length=20)),
                ('voted_at', models.DateTimeField(auto_now_add=True)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='app6_movie.movie')),
                ('user_vote', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user_vote', 'movie')},
            },
        ),
        migrations.CreateModel(
            name='MovieWatchHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('watched_at', models.DateTimeField(auto_now_add=True)),
                ('duration_watched', models.PositiveIntegerField(blank=True, help_text='Duration watched in seconds', null=True)),
                ('is_completed', models.BooleanField(default=False, help_text='Whether the movie was fully watched')),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='watch_history', to='app6_movie.movie')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='movie_watch_history', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-watched_at'],
                'unique_together': {('user', 'movie', 'watched_at')},
            },
        ),
        migrations.CreateModel(
            name='UserMovieViewed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('viewed_at', models.DateTimeField(auto_now_add=True)),
                ('removed_at', models.DateTimeField(auto_now=True)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='viewed_by', to='app6_movie.movie')),
                ('user_viewed', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='viewed_movies', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-viewed_at'],
                'unique_together': {('user_viewed', 'movie')},
            },
        ),
        migrations.CreateModel(
            name='UserMovieWatchlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('removed_at', models.DateTimeField(auto_now=True)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='movie_watchlisted_by', to='app6_movie.movie')),
                ('user_watchlist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='movie_watchlist', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-added_at'],
                'unique_together': {('user_watchlist', 'movie')},
            },
        ),
    ]
