# Generated by Django 5.2.3 on 2025-06-23 04:17

import cloudinary_storage.storage
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='CastMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='CreatorMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='MovieMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='TVShowMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='WriterMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='MediaFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('media_type', models.CharField(choices=[('banner', 'Banner'), ('thumbnail', 'Thumbnail'), ('trailer', 'Trailer'), ('video', 'Video'), ('profile_pic', 'Profile Picture'), ('related_pic', 'Related Picture'), ('other', 'Other')], max_length=20)),
                ('file', models.FileField(blank=True, null=True, storage=cloudinary_storage.storage.MediaCloudinaryStorage(), upload_to='uploads/imdb_media/')),
                ('cdn_url', models.URLField(blank=True, null=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(limit_choices_to={'model__in': ['moviemedia', 'tvshowmedia', 'seasonmedia', 'episodemedia', 'castmedia', 'creatormedia', 'writermedia']}, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
        ),
        migrations.CreateModel(
            name='SeasonMedia',
            fields=[
                ('season_number', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('tvshow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seasons', to='app1_media_manger.tvshowmedia')),
            ],
            options={
                'ordering': ['season_number'],
                'unique_together': {('tvshow', 'season_number')},
            },
        ),
        migrations.CreateModel(
            name='EpisodeMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('episode_number', models.PositiveIntegerField(editable=False)),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='episodes', to='app1_media_manger.seasonmedia')),
                ('tvshow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fk_seasons', to='app1_media_manger.tvshowmedia')),
            ],
            options={
                'unique_together': {('tvshow', 'season', 'episode_number')},
            },
        ),
    ]
